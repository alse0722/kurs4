sites:
    https://webdevkin.ru/posts/raznoe/basic-auth -- Базовая аутентификация в nginx. Закрываем админку магазина
    https://habr.com/ru/articles/351904/ -- Простая аутентификация на NGINX с помощью LUA
    https://www.8host.com/blog/nastrojka-parolnoj-autentifikacii-cherez-nginx/ -- НАСТРОЙКА ПАРОЛЬНОЙ АУТЕНТИФИКАЦИИ ЧЕРЕЗ NGINX

Устанавливая веб-сервер, вы должны ограничить общий доступ к отдельным частям вашего сайта. Обычно веб-приложения предоставляют собственные средства аутентификации и авторизации. 
Однако если они вам по какой-либо причине не подходят, вы можете заблокировать доступ и при помощи веб-сервера. 
В этом мануале мы защитим паролем ресурсы через веб-сервер Nginx.


1: Создание файла паролей

Создание файла с помощью утилит OpenSSL

Если на вашем сервере уже установлен OpenSSL, вы можете создать файл паролей без установки дополнительных средств. 
Для этого нужно создать в конфигурационном каталоге /etc/nginx скрытый файл .htpasswd для хранения учетных данных.
Вы можете добавить имя пользователя в файл с помощью следующей команды. Здесь в качестве условного имени используется 8host; просто укажите любое другое имя:
    sudo sh -c "echo -n '8host:' >> /etc/nginx/.htpasswd"
    cat /etc/nginx/.htpasswd

Создание файла паролей с помощью apache2-utils

OpenSSL может шифровать пароли, но многим пользователям проще использовать вместо этого инструмента специальную утилиту. 
Утилита htpasswd из пакета apache2-utils хорошо выполняет эту функцию.
Установите пакет apache2-utils на свой сервер:
    sudo apt update
    sudo apt install apache2-utils

Теперь у вас есть доступ к команде htpasswd.  С ее помощью вы можете создать файл паролей, который Nginx может использовать для аутентификации пользователей. 
Создайте для этой цели скрытый файл .htpasswd в каталоге /etc/nginx.
При первом использовании этой утилиты нужно добавить флаг -c, который создаст требуемый файл. Укажите имя пользователя (мы используем условное имя 8host) в конце команды, чтобы создать новую запись.
    sudo htpasswd -c /etc/nginx/.htpasswd 8host

Аргумент -c нужно использовать при добавлении новых пользователей в файл:
    sudo htpasswd /etc/nginx/.htpasswd another_user
    cat /etc/nginx/.htpasswd

2: Настройка пароль аутентификации Nginx

Теперь, когда у нас есть файл с пользователями и паролями в том формате, который может прочитать Nginx, нам нужно настроить Nginx для проверки этого файла.
Откройте конфигурационный файл server блока, контент которого вы хотели бы защитить паролем. Здесь мы просто используем блок server по умолчанию, установленный вместе с пакетом Ubuntu Nginx:
    sudo nano /etc/nginx/sites-enabled/default

Чтобы настроить аутентификацию, вам нужно выбрать контекст, на который распространится ограничение. 
Помимо прочего, Nginx позволяет устанавливать ограничения на уровне сервера или внутри определенного блока location.
В этом примере мы установим ограничение на уровне сервера. Директива auth_basic включает аутентификацию и отображает имя области, которое пользователь увидит при запросе учетных данных. 
Директива auth_basic_user_file покажет Nginx, где находится созданный вами файл паролей.
    server {
        listen 80 default_server;

        . . .

        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
    server {
        listen 80 default_server;

        . . .

        location / {
        try_files $uri $uri/ =404;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
        }
    }

Сохраните и закройте файл, когда закончите. Перезапустите Nginx, чтобы применить изменения:
    sudo systemctl restart nginx

3: Тестирование аутентификации
Чтобы убедиться, что требуемый контент действительно защищен, попробуйте получить доступ к нему в веб-браузере:
    http://server_domain_or_IP

На экране должна появиться форма, в которую вы должны ввести имя пользователя и пароль: